// Unit Tests
// ==========


// Convert Length
// --------------
@include test-module('convert-length [function]') {
  @include test('No conversion for equal units') {
    $test: convert-length(6em, em);
    $expect: 6em;
    @include assert-equal($test, $expect,
      'Return length directly when from- and to- units match.');
  }

  @include test('Convert px to em') {
    $test: convert-length(16px, em);
    $expect: 1em;
    @include assert-equal($test, $expect,
      'Returns em length from px input.');
  }

  @include test('Convert px to %') {
    $test: convert-length(16px, '%', $to-context: 1600px);
    $expect: 1%;
    @include assert-equal($test, $expect,
      'Returns % conversion from px.');
  }

  @include test('Convert em to %') {
    $test: convert-length(1.35em, '%', $to-context: 600px);
    $expect: 3.6%;
    @include assert-equal($test, $expect,
      'Returns % conversion from em.');
  }

  @include test('Convert px to ex') {
    $test: convert-length(16px, ex);
    $expect: 2ex;
    @include assert-equal($test, $expect,
      'Returns ex conversion from px.');
  }

  @include test('Convert % to px') {
    $test: convert-length(150%, px, 18px);
    $expect: 27px;
    @include assert-equal($test, $expect,
      'Returns px conversion from %.');
  }

  @include test('Convert px to rem') {
    $test: convert-length(1px, rem);
    $expect: .0625rem;
    @include assert-equal($test, $expect,
      'Returns rem conversion from px.');
  }

  @include test('Convert em to mm') {
    $test: convert-length(2em, mm, 18px);
    $expect: 9.525mm;
    @include assert-equal($test, $expect,
      'Returns mm conversion from em.');
  }

  @include test('Convert rem to px') {
    $test: convert-length(1rem, px);
    $expect: 16px;
    @include assert-equal($test, $expect,
      'Returns px conversion from rem.');
  }
}
